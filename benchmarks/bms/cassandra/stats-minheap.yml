#
# Minimum heap sizes in which benchmark will run to completion, using
# -Xms<x> -Xmx<x> for various x and various configuarations.  Discovered
# by bisection search.  Numbers below are in MB and reflect results of
# three trials.
#
open-jdk-17.s.cp.gc-G1.t-32.f-10.n-1: [ 97, 112, 120 ]                 # java-17-openjdk-amd64 -server -XX:+UseCompressedOops -XX:+UseG1GC -jar dacapo-evaluation-git-744ef415.jar cassandra -t 32 -f 10 -n 1
open-jdk-17.sz-small.s.cp.gc-G1.t-1.f-10.n-1: [ 74, 72, 73 ]           # java-17-openjdk-amd64 -server -XX:+UseCompressedOops -XX:+UseG1GC -jar dacapo-evaluation-git-744ef415.jar cassandra -s small -t 32 -f 10 -n 1
open-jdk-17.sz-large.s.cp.gc-G1.t-32.f-10.n-1: [ 133, 137, 140 ]       # java-17-openjdk-amd64 -server -XX:+UseCompressedOops -XX:+UseG1GC -jar dacapo-evaluation-git-744ef415.jar cassandra -s large -t 32 -f 10 -n 1
open-jdk-17.s.cp.gc-Parallel.t-32.f-10.n-1: [ 112, 110, 105 ]          # java-17-openjdk-amd64 -server -XX:+UseCompressedOops -XX:+UseG1GC -jar dacapo-evaluation-git-744ef415.jar cassandra -t 1 -f 10 -n 1
open-jdk-17.s.cp.gc-G1.t-1.f-10.n-1: [ 87, 85, 87 ]                    # java-17-openjdk-amd64 -server -XX:-UseCompressedOops -XX:+UseG1GC -jar dacapo-evaluation-git-744ef415.jar cassandra -t 32 -f 10 -n 1
open-jdk-17.s.up.gc-G1.t-32.f-10.n-1: [ 121, 125, 113 ]                # java-17-openjdk-amd64 -server -XX:+UseCompressedOops -XX:+UseParallelGC -jar dacapo-evaluation-git-744ef415.jar cassandra -t 32 -f 10 -n 1
open-jdk-17.s.cp.gc-G1.t-32.f-10.n-10: [ 129, 129, 129 ]               # java-17-openjdk-amd64 -server -XX:+UseCompressedOops -XX:+UseG1GC -jar dacapo-evaluation-git-744ef415.jar cassandra -t 32 -f 10 -n 1
open-jdk-11.s.cp.gc-G1.t-32.f-10.n-1: [ 106, 113, 117 ]                # java-17-openjdk-amd64 -server -XX:+UseCompressedOops -XX:+UseG1GC -jar dacapo-evaluation-git-744ef415.jar cassandra -t 32 -f 10 -n 10
