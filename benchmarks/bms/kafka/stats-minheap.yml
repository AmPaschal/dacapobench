#
# Minimum heap sizes in which benchmark will run to completion, using
# -Xms<x> -Xmx<x> for various x and various configuarations.  Discovered
# by bisection search.  Numbers below are in MB and reflect results of
# three trials.
#
open-jdk-17.s.cp.gc-G1.t-32.f-10.n-1: [ 195, 194, 190 ]                # java-17-openjdk-amd64 -server -XX:+UseCompressedOops -XX:+UseG1GC -jar dacapo-evaluation-git-744ef415.jar kafka -t 32 -f 10 -n 1
open-jdk-17.sz-small.s.cp.gc-G1.t-1.f-10.n-1: [ 157, 157, 159 ]        # java-17-openjdk-amd64 -server -XX:+UseCompressedOops -XX:+UseG1GC -jar dacapo-evaluation-git-744ef415.jar kafka -s small -t 32 -f 10 -n 1
open-jdk-17.sz-large.s.cp.gc-G1.t-32.f-10.n-1: [ 337, 339, 335 ]       # java-17-openjdk-amd64 -server -XX:+UseCompressedOops -XX:+UseG1GC -jar dacapo-evaluation-git-744ef415.jar kafka -s large -t 32 -f 10 -n 1
open-jdk-17.s.cp.gc-Parallel.t-32.f-10.n-1: [ 218, 218, 217 ]          # java-17-openjdk-amd64 -server -XX:+UseCompressedOops -XX:+UseG1GC -jar dacapo-evaluation-git-744ef415.jar kafka -t 1 -f 10 -n 1
open-jdk-17.s.cp.gc-G1.t-1.f-10.n-1: [ 194, 189, 185 ]                 # java-17-openjdk-amd64 -server -XX:-UseCompressedOops -XX:+UseG1GC -jar dacapo-evaluation-git-744ef415.jar kafka -t 32 -f 10 -n 1
open-jdk-17.s.up.gc-G1.t-32.f-10.n-1: [ 193, 203, 202 ]                # java-17-openjdk-amd64 -server -XX:+UseCompressedOops -XX:+UseParallelGC -jar dacapo-evaluation-git-744ef415.jar kafka -t 32 -f 10 -n 1
open-jdk-17.s.cp.gc-G1.t-32.f-10.n-10: [ 198, 185, 189 ]               # java-17-openjdk-amd64 -server -XX:+UseCompressedOops -XX:+UseG1GC -jar dacapo-evaluation-git-744ef415.jar kafka -t 32 -f 10 -n 1
open-jdk-11.s.cp.gc-G1.t-32.f-10.n-1: [ 193, 199, 195 ]                # java-17-openjdk-amd64 -server -XX:+UseCompressedOops -XX:+UseG1GC -jar dacapo-evaluation-git-744ef415.jar kafka -t 32 -f 10 -n 10
